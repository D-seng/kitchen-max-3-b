{"remainingRequest":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/babel-loader/lib/index.js!/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/darrensenger/workspace/current/kitchen-max-3-b/client/src/components/FUpload.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/src/components/FUpload.vue","mtime":1638507044253},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/cache-loader/dist/cjs.js","mtime":1638459943317},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/babel-loader/lib/index.js","mtime":1638459947335},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/cache-loader/dist/cjs.js","mtime":1638459943317},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/vue-loader-v16/dist/index.js","mtime":1638459949352}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJGVXBsb2FkIiwKICBwcm9wczogewogICAgbWF4RmlsZXM6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBob3RvczogW10sCiAgICAgIHdpZGdldDogbnVsbCwKICAgICAgcHVibGljSWQ6ICcnCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgb3BlblVwbG9hZE1vZGFsOiBmdW5jdGlvbiBvcGVuVXBsb2FkTW9kYWwoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAvLyBkZWJ1Z2dlcjsKICAgICAgdmFyIHByZXNldHMgPSBbInNpZ25lZCIsICJ2aWRlbyIsICJlYWdlciJdOwoKICAgICAgdmFyIGdldE15VXBsb2FkUHJlc2V0cyA9IGZ1bmN0aW9uIGdldE15VXBsb2FkUHJlc2V0cyhjYikgewogICAgICAgIHJldHVybiBjYihwcmVzZXRzKTsKICAgICAgfTsKCiAgICAgIHdpbmRvdy5jbG91ZGluYXJ5LnNldENsb3VkTmFtZSgnZGNycWg3dmEyY3QnKTsKICAgICAgdmFyIHdpZGdldCA9IHdpbmRvdy5jbG91ZGluYXJ5LmNyZWF0ZVVwbG9hZFdpZGdldCh7CiAgICAgICAgY2xvdWRfbmFtZTogJ2RjcnFoN3ZhMmN0JywKICAgICAgICB1cGxvYWRfcHJlc2V0OiAnbzZqazhuYWcnLAogICAgICAgIGZvbGRlcjogJ3dlYmluYXInLAogICAgICAgIHJlc291cmNlVHlwZTogJ2ltYWdlJywKICAgICAgICBjbGllbnRBbGxvd2VkRm9ybWF0czogWydwbmcnLCAnZ2lmJywgJ2pwZWcnXSwKICAgICAgICAvLyBpbmxpbmVDb250YWluZXI6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3aWRnZXQtY29udGFpbmVyJyksCiAgICAgICAgLy8gc2hvd0NvbXBsZXRlZEJ1dHRvbjogdHJ1ZQogICAgICAgIHNob3dBZHZhbmNlZE9wdGlvbnM6IHRydWUsCiAgICAgICAgZ2V0VXBsb2FkUHJlc2V0czogZ2V0TXlVcGxvYWRQcmVzZXRzLAogICAgICAgIG1heEZpbGVzOiB0aGlzLm1heEZpbGVzIC8vICB0YWdzOiBbJ3ByaW1hcnknLCAnc2Vjb25kYXJ5J10KICAgICAgICAvLyBwcmVCYXRjaDogKGNiLCBkYXRhKSA9PiB7CiAgICAgICAgLy8gICAgIGNvbnNvbGUubG9nKCdjYicpCiAgICAgICAgLy8gICBjb25zb2xlLmRpcihjYikKICAgICAgICAvLyAgIGNiKHtjYW5jZWw6IHRydWV9KQogICAgICAgIC8vIH0KCiAgICAgIH0sIGZ1bmN0aW9uIChlcnJvciwgcmVzdWx0KSB7CiAgICAgICAgaWYgKCFlcnJvciAmJiByZXN1bHQgJiYgcmVzdWx0LmV2ZW50ID09PSAicXVldWVzLWVuZCIpIHsKICAgICAgICAgIC8vIGRlYnVnZ2VyCiAgICAgICAgICBjb25zb2xlLmxvZygnRG9uZSB1cGxvYWRpbmcuLjogJywgcmVzdWx0LmluZm8uZmlsZXMpOyAvLyBkZWJ1Z2dlcgoKICAgICAgICAgIHZhciBmaWxlQ291bnQgPSByZXN1bHQuaW5mby5maWxlcy5sZW5ndGg7CiAgICAgICAgICB2YXIgcHVibGljSWRzID0gcmVzdWx0LmluZm8uZmlsZXMubWFwKGZ1bmN0aW9uIChmaWxlKSB7CiAgICAgICAgICAgIHJldHVybiBmaWxlLnVwbG9hZEluZm8ucHVibGljX2lkOwogICAgICAgICAgfSk7CiAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQuaW5mby5wdWJsaWNfaWQpOwoKICAgICAgICAgIF90aGlzLiRzdG9yZS5kaXNwYXRjaCgid3JpdGVQdWJsaWNJZHMiLCB7CiAgICAgICAgICAgIHB1YmxpY0lkczogcHVibGljSWRzLAogICAgICAgICAgICBtYXhGaWxlczogX3RoaXMubWF4RmlsZXMKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSkub3BlbigpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/darrensenger/workspace/current/kitchen-max-3-b/client/src/components/FUpload.vue"],"names":[],"mappings":";;AAOA,eAAe;AACb,EAAA,IAAI,EAAE,SADO;AAEb,EAAA,KAAK,EAAE;AACL,IAAA,QAAQ,EAAE;AACR,MAAA,IAAI,EAAE,MADE;AAEV,MAAA,QAAQ,EAAE;AAFA;AADL,GAFM;AAQb,EAAA,IARa,kBAQN;AACL,WAAO;AACP,MAAA,MAAM,EAAE,EADD;AAEP,MAAA,MAAM,EAAE,IAFD;AAGP,MAAA,QAAQ,EAAE;AAHH,KAAP;AAMD,GAfY;AAgBb,EAAA,OAAO,EAAE;AAEP,IAAA,eAFO,6BAEW;AAAA;;AACtB;AACM,UAAM,OAAM,GAAI,CAAC,QAAD,EAAW,OAAX,EAAoB,OAApB,CAAhB;;AACA,UAAM,kBAAiB,GAAI,SAArB,kBAAqB,CAAC,EAAD;AAAA,eAAQ,EAAE,CAAC,OAAD,CAAV;AAAA,OAA3B;;AAEA,MAAA,MAAM,CAAC,UAAP,CAAkB,YAAlB,CAA+B,aAA/B;AACA,UAAI,MAAK,GAAI,MAAM,CAAC,UAAP,CAAkB,kBAAlB,CACX;AAAE,QAAA,UAAU,EAAE,aAAd;AACE,QAAA,aAAa,EAAE,UADjB;AAEE,QAAA,MAAM,EAAE,SAFV;AAGE,QAAA,YAAY,EAAE,OAHhB;AAIE,QAAA,oBAAoB,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,CAJxB;AAKE;AACA;AACA,QAAA,mBAAmB,EAAE,IAPvB;AAQG,QAAA,gBAAgB,EAAE,kBARrB;AASG,QAAA,QAAQ,EAAE,KAAK,QATlB,CAUE;AACA;AACA;AACA;AACA;AACA;;AAfF,OADW,EAmBX,UAAC,KAAD,EAAQ,MAAR,EAAmB;AACjB,YAAI,CAAC,KAAD,IAAU,MAAV,IAAoB,MAAM,CAAC,KAAP,KAAiB,YAAzC,EAAuD;AACrD;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,oBAAZ,EAAkC,MAAM,CAAC,IAAP,CAAY,KAA9C,EAFqD,CAGrD;;AACA,cAAM,SAAQ,GAAI,MAAM,CAAC,IAAP,CAAY,KAAZ,CAAkB,MAApC;AACA,cAAM,SAAQ,GAAI,MAAM,CAAC,IAAP,CAAY,KAAZ,CAAkB,GAAlB,CAAsB,UAAA,IAAG,EAAK;AAC9C,mBAAO,IAAI,CAAC,UAAL,CAAgB,SAAvB;AACD,WAFiB,CAAlB;AAIA,UAAA,OAAO,CAAC,GAAR,CAAY,MAAM,CAAC,IAAP,CAAY,SAAxB;;AACA,UAAA,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,gBAArB,EAAuC;AAAE,YAAA,SAAS,EAAT,SAAF;AAAa,YAAA,QAAQ,EAAE,KAAI,CAAC;AAA5B,WAAvC;AAGA;AACH,OAlCU,EAkCR,IAlCQ,EAAb;AAoCF;AA5CO;AAhBI,CAAf","sourcesContent":["<template>\n    <div>\n      <button @click.prevent=\"openUploadModal\">Upload files</button>\n</div>\n</template>\n\n<script>\nexport default {\n  name: \"FUpload\",\n  props: {\n    maxFiles: {\n      type: Number,\n    required: true\n    }\n  },\n  data() {\n    return {\n    photos: [],\n    widget: null,\n    publicId: ''\n    }\n\n  },\n  methods: {\n\n    openUploadModal() {\n// debugger;\n      const presets = [\"signed\", \"video\", \"eager\"];\n      const getMyUploadPresets = (cb) => cb(presets);\n\n      window.cloudinary.setCloudName('dcrqh7va2ct')\n      var widget = window.cloudinary.createUploadWidget(\n        { cloud_name: 'dcrqh7va2ct',\n          upload_preset: 'o6jk8nag',\n          folder: 'webinar',\n          resourceType: 'image',\n          clientAllowedFormats: ['png', 'gif', 'jpeg'],\n          // inlineContainer: document.getElementById('widget-container'),\n          // showCompletedButton: true\n          showAdvancedOptions: true,\n           getUploadPresets: getMyUploadPresets,\n           maxFiles: this.maxFiles,\n          //  tags: ['primary', 'secondary']\n          // preBatch: (cb, data) => {\n          //     console.log('cb')\n          //   console.dir(cb)\n          //   cb({cancel: true})\n          // }\n\n        },\n        (error, result) => {\n          if (!error && result && result.event === \"queues-end\") {\n            // debugger\n            console.log('Done uploading..: ', result.info.files);\n            // debugger\n            const fileCount = result.info.files.length\n            const publicIds = result.info.files.map(file => {\n              return file.uploadInfo.public_id\n            })\n\n            console.log(result.info.public_id)\n            this.$store.dispatch(\"writePublicIds\", { publicIds, maxFiles: this.maxFiles } );\n\n\n            }\n        }).open()\n\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"],"sourceRoot":""}]}