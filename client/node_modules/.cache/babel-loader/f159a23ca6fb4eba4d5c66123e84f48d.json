{"remainingRequest":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/babel-loader/lib/index.js!/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/eslint-loader/index.js??ref--14-0!/Users/darrensenger/workspace/current/kitchen-max-3-b/client/src/main.js","dependencies":[{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/src/main.js","mtime":1640816169513},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/cache-loader/dist/cjs.js","mtime":1638459943317},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/babel-loader/lib/index.js","mtime":1638459947335},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/eslint-loader/index.js","mtime":1638459943811}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwgZnJvbSAiL1VzZXJzL2RhcnJlbnNlbmdlci93b3Jrc3BhY2UvY3VycmVudC9raXRjaGVuLW1heC0zLWIvY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90YWdnZWRUZW1wbGF0ZUxpdGVyYWwuanMiOwppbXBvcnQgIi9Vc2Vycy9kYXJyZW5zZW5nZXIvd29ya3NwYWNlL2N1cnJlbnQva2l0Y2hlbi1tYXgtMy1iL2NsaWVudC9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lml0ZXJhdG9yLmpzIjsKaW1wb3J0ICIvVXNlcnMvZGFycmVuc2VuZ2VyL3dvcmtzcGFjZS9jdXJyZW50L2tpdGNoZW4tbWF4LTMtYi9jbGllbnQvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlLmpzIjsKaW1wb3J0ICIvVXNlcnMvZGFycmVuc2VuZ2VyL3dvcmtzcGFjZS9jdXJyZW50L2tpdGNoZW4tbWF4LTMtYi9jbGllbnQvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuYXNzaWduLmpzIjsKaW1wb3J0ICIvVXNlcnMvZGFycmVuc2VuZ2VyL3dvcmtzcGFjZS9jdXJyZW50L2tpdGNoZW4tbWF4LTMtYi9jbGllbnQvbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlLmZpbmFsbHkuanMiOwoKdmFyIF90ZW1wbGF0ZU9iamVjdCwgX3RlbXBsYXRlT2JqZWN0MiwgX3RlbXBsYXRlT2JqZWN0MzsKCmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IHsgY3JlYXRlQXBwLCBwcm92aWRlLCBoIH0gZnJvbSAndnVlJzsKaW1wb3J0IHsgRGVmYXVsdEFwb2xsb0NsaWVudCwgcHJvdmlkZUFwb2xsb0NsaWVudCB9IGZyb20gJ0B2dWUvYXBvbGxvLWNvbXBvc2FibGUnOwppbXBvcnQgQXBwIGZyb20gJy4vQXBwLnZ1ZSc7CmltcG9ydCByb3V0ZXIgZnJvbSAnLi9yb3V0ZXInOwppbXBvcnQgeyBBcG9sbG9DbGllbnQsIGNyZWF0ZUh0dHBMaW5rLCBJbk1lbW9yeUNhY2hlIH0gZnJvbSAnQGFwb2xsby9jbGllbnQvY29yZSc7CmltcG9ydCAnLi9pbmRleC5jc3MnOwppbXBvcnQgZ3FsIGZyb20gJ2dyYXBocWwtdGFnJzsgLy8gIEhUVFAgY29ubmVjdGlvbiB0byB0aGUgQVBJCgp2YXIgaHR0cExpbmsgPSBjcmVhdGVIdHRwTGluayh7CiAgLy8gIFlvdSBzaG91bGQgdXNlIGFuIGFic29sdXRlIFVSTCBoZXJlCiAgdXJpOiAnaHR0cDpsb2NhbGhvc3Q6NDAwMC9ncmFwaHFsJwp9KTsgLy8gIENhY2hlIGltcGxlbWVudGF0aW9uCgp2YXIgY2FjaGUgPSBuZXcgSW5NZW1vcnlDYWNoZSgpOwpjb25zb2xlLmxvZyhjYWNoZSk7CnZhciB0eXBlRGVmcyA9IGdxbChfdGVtcGxhdGVPYmplY3QgfHwgKF90ZW1wbGF0ZU9iamVjdCA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgdHlwZSBBcHBvaW50bWVudCB7XG4gICAgX2lkOiBJRCFcbiAgICBkYXRlOiBTdHJpbmchXG4gICAgbWVhbDogU3RyaW5nIVxuICAgIGRldGFpbHM6IFN0cmluZyFcbiAgICBraXRjaGVuOiBJRCFcbiAgICB1c2VyOiBJRCFcbiAgfVxuXG4gdHlwZSBNdXRhdGlvbiB7XG4gICBtb2RpZnlBcHB0KGlkOiBJRCEsIG1lYWw6IFN0cmluZywgZGV0YWlsczogU3RyaW5nKTogSXRlbSxcbiAgIG1vdmVBcHB0RGF0ZShpZDogSUQhLCBkYXRlOiBTdHJpbmchKTogTWVhbFxuIH1cblxuICB0eXBlIFF1ZXJ5IHtcbiAgICBnZXRBcHBvaW50bWVudHMoZGF0ZTogW1N0cmluZyFdKTogQXBwb2ludG1lbnRcbiAgfSJdKSkpOwp2YXIgbWVhbEZpZWxkc1F1ZXJ5ID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDIgfHwgKF90ZW1wbGF0ZU9iamVjdDIgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gICB7XG4gICAgIG1lYWxGaWVsZHMgQGNsaWVudCB7XG4gICAgICAgaWRcbiAgICAgICBkZXRhaWxzXG4gICAgICAgbWVhbFxuICAgICAgIGRhdGVcbiAgICAgfVxuICAgfVxuICJdKSkpOwp2YXIgZ2V0QXBwb2ludG1lbnRzID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDMgfHwgKF90ZW1wbGF0ZU9iamVjdDMgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG5xdWVyeSBnZXRBcHBvaW50bWVudHMgKCRkYXRlOiBbU3RyaW5nIV0pIHtcbiAgZ2V0QXBwb2ludG1lbnRzIEBjbGllbnQgKGRhdGU6ICRkYXRlKVxuICAgIHtcbiAgICAgICAgX2lkXG4gICAgICAgIGtpdGNoZW5cbiAgICAgICAgdXNlclxuICAgICAgICBkYXRlXG4gICAgICAgIG1lYWxcbiAgICAgICAgZGV0YWlsc1xuICAgICAgfVxufSJdKSkpOwp2YXIgcmVzb2x2ZXJzID0gewogIE11dGF0aW9uOiB7CiAgICBtb3ZlQXBwdERhdGU6IGZ1bmN0aW9uIG1vdmVBcHB0RGF0ZShfLCBfcmVmLCBfcmVmMikgewogICAgICB2YXIgaWQgPSBfcmVmLmlkOwogICAgICB2YXIgY2FjaGUgPSBfcmVmMi5jYWNoZTsKICAgICAgZGVidWdnZXI7CiAgICAgIHZhciBkYXRhID0gY2FjaGUucmVhZFF1ZXJ5KHsKICAgICAgICBxdWVyeTogbWVhbEZpZWxkc1F1ZXJ5CiAgICAgIH0pOwogICAgICB2YXIgY3VycmVudE1lYWwgPSBkYXRhLm1lYWxGaWVsZHMuZmluZChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLmlkID09PSBpZDsKICAgICAgfSk7CiAgICAgIGN1cnJlbnRNZWFsLmRhdGUgPSAnMjAyMS0xMC0zMSc7CiAgICAgIGNhY2hlLndyaXRlUXVlcnkoewogICAgICAgIHF1ZXJ5OiBtZWFsRmllbGRzUXVlcnksCiAgICAgICAgZGF0YTogZGF0YQogICAgICB9KTsKICAgICAgcmV0dXJuIGN1cnJlbnRNZWFsLmRhdGU7CiAgICB9CiAgfQp9Owp2YXIgYXBvbGxvQ2xpZW50ID0gbmV3IEFwb2xsb0NsaWVudCh7CiAgY2FjaGU6IGNhY2hlLAogIHJlc29sdmVyczoge30sCiAgbGluazogaHR0cExpbmssCiAgdHlwZURlZnM6IHR5cGVEZWZzLAogIGdldEFwcG9pbnRtZW50czogZ2V0QXBwb2ludG1lbnRzCn0pOwp2YXIgYXBwID0gY3JlYXRlQXBwKHsKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAoKSB7CiAgICBwcm92aWRlQXBvbGxvQ2xpZW50KGFwb2xsb0NsaWVudCk7CiAgfSwKICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcigpIHsKICAgIHJldHVybiBoKEFwcCk7CiAgfQp9KTsKYXBwLnVzZShyb3V0ZXIpLm1vdW50KCcjYXBwJyk7"},{"version":3,"sources":["/Users/darrensenger/workspace/current/kitchen-max-3-b/client/src/main.js"],"names":["createApp","provide","h","DefaultApolloClient","provideApolloClient","App","router","ApolloClient","createHttpLink","InMemoryCache","gql","httpLink","uri","cache","console","log","typeDefs","mealFieldsQuery","getAppointments","resolvers","Mutation","moveApptDate","_","id","data","readQuery","query","currentMeal","mealFields","find","item","date","writeQuery","apolloClient","link","app","setup","render","use","mount"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,OAApB,EAA6BC,CAA7B,QAAsC,KAAtC;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,wBAAzD;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,qBAA5D;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CAEA;;AACA,IAAMC,QAAQ,GAAGH,cAAc,CAAC;AAC9B;AACAI,EAAAA,GAAG,EAAE;AAFyB,CAAD,CAA/B,C,CAKA;;AACA,IAAMC,KAAK,GAAG,IAAIJ,aAAJ,EAAd;AAEAK,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,IAAMG,QAAQ,GAAGN,GAAH,0ZAAd;AAmBA,IAAMO,eAAe,GAAGP,GAAH,8KAArB;AAUA,IAAMQ,eAAe,GAAGR,GAAH,wQAArB;AAaA,IAAMS,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,sBAACC,CAAD,eAA0B;AAAA,UAApBC,EAAoB,QAApBA,EAAoB;AAAA,UAAZV,KAAY,SAAZA,KAAY;AACtC;AACA,UAAMW,IAAI,GAAGX,KAAK,CAACY,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAET;AAAT,OAAhB,CAAb;AACA,UAAMU,WAAW,GAAGH,IAAI,CAACI,UAAL,CAAgBC,IAAhB,CAAqB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhB;AAAA,OAAzB,CAApB;AACAI,MAAAA,WAAW,CAACI,IAAZ,GAAmB,YAAnB;AACAlB,MAAAA,KAAK,CAACmB,UAAN,CAAiB;AAAEN,QAAAA,KAAK,EAAET,eAAT;AAA0BO,QAAAA,IAAI,EAAJA;AAA1B,OAAjB;AACA,aAAOG,WAAW,CAACI,IAAnB;AACD;AARO;AADM,CAAlB;AAaA,IAAME,YAAY,GAAG,IAAI1B,YAAJ,CAAiB;AACpCM,EAAAA,KAAK,EAALA,KADoC;AAEpCM,EAAAA,SAAS,EAAE,EAFyB;AAGpCe,EAAAA,IAAI,EAAEvB,QAH8B;AAIpCK,EAAAA,QAAQ,EAARA,QAJoC;AAKpCE,EAAAA,eAAe,EAAfA;AALoC,CAAjB,CAArB;AAQA,IAAMiB,GAAG,GAAGnC,SAAS,CAAC;AACpBoC,EAAAA,KADoB,mBACX;AACPhC,IAAAA,mBAAmB,CAAC6B,YAAD,CAAnB;AACD,GAHmB;AAIpBI,EAAAA,MAAM,EAAE;AAAA,WAAMnC,CAAC,CAACG,GAAD,CAAP;AAAA;AAJY,CAAD,CAArB;AAOA8B,GAAG,CAACG,GAAJ,CAAQhC,MAAR,EAAgBiC,KAAhB,CAAsB,MAAtB","sourcesContent":["import { createApp, provide, h } from 'vue'\nimport { DefaultApolloClient, provideApolloClient } from '@vue/apollo-composable'\nimport App from './App.vue'\nimport router from './router'\nimport { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client/core'\nimport './index.css'\nimport gql from 'graphql-tag'\n\n//  HTTP connection to the API\nconst httpLink = createHttpLink({\n  //  You should use an absolute URL here\n  uri: 'http:localhost:4000/graphql'\n})\n\n//  Cache implementation\nconst cache = new InMemoryCache()\n\nconsole.log(cache)\nconst typeDefs = gql`\n  type Appointment {\n    _id: ID!\n    date: String!\n    meal: String!\n    details: String!\n    kitchen: ID!\n    user: ID!\n  }\n\n type Mutation {\n   modifyAppt(id: ID!, meal: String, details: String): Item,\n   moveApptDate(id: ID!, date: String!): Meal\n }\n\n  type Query {\n    getAppointments(date: [String!]): Appointment\n  }`\n\nconst mealFieldsQuery = gql`\n   {\n     mealFields @client {\n       id\n       details\n       meal\n       date\n     }\n   }\n `\nconst getAppointments = gql`\nquery getAppointments ($date: [String!]) {\n  getAppointments @client (date: $date)\n    {\n        _id\n        kitchen\n        user\n        date\n        meal\n        details\n      }\n}`\n\nconst resolvers = {\n  Mutation: {\n    moveApptDate: (_, { id }, { cache }) => {\n      debugger\n      const data = cache.readQuery({ query: mealFieldsQuery })\n      const currentMeal = data.mealFields.find(item => item.id === id)\n      currentMeal.date = '2021-10-31'\n      cache.writeQuery({ query: mealFieldsQuery, data })\n      return currentMeal.date\n    }\n  }\n}\n\nconst apolloClient = new ApolloClient({\n  cache,\n  resolvers: {},\n  link: httpLink,\n  typeDefs,\n  getAppointments\n})\n\nconst app = createApp({\n  setup () {\n    provideApolloClient(apolloClient)\n  },\n  render: () => h(App)\n})\n\napp.use(router).mount('#app')\n"]}]}