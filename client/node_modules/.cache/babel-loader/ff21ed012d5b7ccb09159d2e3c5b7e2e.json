{"remainingRequest":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/babel-loader/lib/index.js!/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/darrensenger/workspace/current/kitchen-max-3-b/client/src/components/S3FileUpload.vue?vue&type=template&id=e25efae6","dependencies":[{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/src/components/S3FileUpload.vue","mtime":1638506900824},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/cache-loader/dist/cjs.js","mtime":1638459943317},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/babel-loader/lib/index.js","mtime":1638459947335},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1638459950764},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/cache-loader/dist/cjs.js","mtime":1638459943317},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/vue-loader-v16/dist/index.js","mtime":1638459949352}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2sgfSBmcm9tICJ2dWUiOwoKdmFyIF9ob2lzdGVkXzEgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnIiLCBudWxsLCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJiciIsIG51bGwsIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF8zID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCBudWxsLCAidXBsb2FkVXJsIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnIiLCBudWxsLCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfNSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJwIiwgbnVsbCwgImRvd25sb2FkVXJsIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzYgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnIiLCBudWxsLCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfNyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJiciIsIG51bGwsIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF84ID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImJyIiwgbnVsbCwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzkgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnIiLCBudWxsLCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTAgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnIiLCBudWxsLCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTEgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnIiLCBudWxsLCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTIgPSB7CiAgY2xhc3M6ICJ3LTQ4IGgtNDgiCn07Cgp2YXIgX2hvaXN0ZWRfMTMgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnIiLCBudWxsLCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTQgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIG51bGwsICIqKioqKioqKioqKioqKioqKioiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTUgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnIiLCBudWxsLCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTYgPSB7CiAga2V5OiAwCn07Cgp2YXIgX2hvaXN0ZWRfMTcgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnIiLCBudWxsLCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTggPSBbInNyYyJdOwoKdmFyIF9ob2lzdGVkXzE5ID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImJyIiwgbnVsbCwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzIwID0gewogIGtleTogMQp9OwoKdmFyIF9ob2lzdGVkXzIxID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInAiLCBudWxsLCAibm8gaW1hZ2UiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMjIgPSBbX2hvaXN0ZWRfMjFdOwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHZhciBfY29tcG9uZW50X2Nyb3BwZXIgPSBfcmVzb2x2ZUNvbXBvbmVudCgiY3JvcHBlciIpOwoKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBudWxsLCBbX2hvaXN0ZWRfMSwgX2hvaXN0ZWRfMiwgX2hvaXN0ZWRfMywgX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIG51bGwsIF90b0Rpc3BsYXlTdHJpbmcoJHNldHVwLnVwbG9hZFVybCksIDEKICAvKiBURVhUICovCiAgKSwgX2hvaXN0ZWRfNCwgX2hvaXN0ZWRfNSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIG51bGwsIF90b0Rpc3BsYXlTdHJpbmcoJHNldHVwLmRvd25sb2FkVXJsKSwgMQogIC8qIFRFWFQgKi8KICApLCBfaG9pc3RlZF82LCBfaG9pc3RlZF83LCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgPGZvcm0gYWN0aW9uPVwiXCIgZW5jcnlwdD1cIm11bHRpcGFydC9mb3JtLWRhdGFcIj4gIiksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImlucHV0IiwgewogICAgdHlwZTogImZpbGUiLAogICAgbXVsdGlwbGU6ICJtdWx0aXBsZSIsCiAgICBvbkNoYW5nZTogX2NhY2hlWzBdIHx8IChfY2FjaGVbMF0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkc2V0dXAuc2V0SW1hZ2UoJGV2ZW50LnRhcmdldC5maWxlcyk7CiAgICB9KQogIH0sIG51bGwsIDMyCiAgLyogSFlEUkFURV9FVkVOVFMgKi8KICApLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgPC9mb3JtPiAiKSwgX2hvaXN0ZWRfOCwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnV0dG9uIiwgewogICAgb25DbGljazogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkc2V0dXAuZ2V0VXJsICYmICRzZXR1cC5nZXRVcmwuYXBwbHkoJHNldHVwLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCAiZ2V0IFVybCIpLCBfaG9pc3RlZF85LCBfY3JlYXRlRWxlbWVudFZOb2RlKCJidXR0b24iLCB7CiAgICB0eXBlOiAic3VibWl0IiwKICAgIG9uQ2xpY2s6IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJHNldHVwLnNpbXBsZUNhbnZhc1Rlc3QgJiYgJHNldHVwLnNpbXBsZUNhbnZhc1Rlc3QuYXBwbHkoJHNldHVwLCBhcmd1bWVudHMpOwogICAgfSkKICB9LCAidXBsb2FkIiksIF9ob2lzdGVkXzEwLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJidXR0b24iLCB7CiAgICBvbkNsaWNrOiBfY2FjaGVbM10gfHwgKF9jYWNoZVszXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRzZXR1cC5oYW5kbGVHZXRGaWxlICYmICRzZXR1cC5oYW5kbGVHZXRGaWxlLmFwcGx5KCRzZXR1cCwgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgImdldCBpbWFnZSIpLCBfaG9pc3RlZF8xMSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMTIsIFtfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9jcm9wcGVyLCB7CiAgICByZWY6ICJjcm9wcGVyUmVmIiwKICAgIGNsYXNzOiAiY3JvcHBlciIsCiAgICBzcmM6ICRzZXR1cC5pbWdCbG9iVXJsLAogICAgYXV0b1pvb206IGZhbHNlLAogICAgb25DaGFuZ2U6ICRzZXR1cC5jaGFuZ2UsCiAgICAic3RlbmNpbC1wcm9wcyI6IHsKICAgICAgYXNwZWN0UmF0aW86IDE2IC8gOQogICAgfQogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJzcmMiLCAib25DaGFuZ2UiXSldKSwgX2hvaXN0ZWRfMTMsIF9ob2lzdGVkXzE0LCBfaG9pc3RlZF8xNSwgJHNldHVwLmltYWdlTG9jID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMTYsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJwIiwgbnVsbCwgX3RvRGlzcGxheVN0cmluZygkc2V0dXAuaW1hZ2VMb2NTdWJzdHJpbmcpLCAxCiAgLyogVEVYVCAqLwogICksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiA8cD57e2ltYWdlTG9jfX08L3A+ICIpLCBfaG9pc3RlZF8xNywgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgbnVsbCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImltZyIsIHsKICAgIHNyYzogJHNldHVwLmltYWdlTG9jLAogICAgYWx0OiAiaW1hZ2VHb2VzSGVyZSIKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIF9ob2lzdGVkXzE4KV0pLCBfaG9pc3RlZF8xOV0pKSA6IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzIwLCBfaG9pc3RlZF8yMikpXSk7Cn0="},{"version":3,"sources":["/Users/darrensenger/workspace/current/kitchen-max-3-b/client/src/components/S3FileUpload.vue"],"names":[],"mappings":";;8BAEE,mBAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;8BAEA,mBAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;8BACE,mBAAA,CAAgB,GAAhB,EAAgB,IAAhB,EAAG,WAAH,EAAY,CAAA;AAAA;AAAZ,C;;8BAEA,mBAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;8BACA,mBAAA,CAAkB,GAAlB,EAAkB,IAAlB,EAAG,aAAH,EAAc,CAAA;AAAA;AAAd,C;;8BAGA,mBAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;8BAEJ,mBAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;8BAMI,mBAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;8BAEA,mBAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;+BAEA,mBAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;+BAEA,mBAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;;AAEG,EAAA,KAAK,EAAC;;;+BAWb,mBAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;+BACA,mBAAA,CAAyB,GAAzB,EAAyB,IAAzB,EAAG,oBAAH,EAAqB,CAAA;AAAA;AAArB,C;;+BAEE,mBAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;;;;;+BAIM,mBAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;;;+BAKR,mBAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;;;;;+BAGE,mBAAA,CAAe,GAAf,EAAe,IAAf,EAAG,UAAH,EAAW,CAAA;AAAA;AAAX,C;;mBAAA,W;;;;uBApDA,mBAAA,CAuDM,KAvDN,EAuDM,IAvDN,EAuDM,CAtDN,UAsDM,EApDN,UAoDM,EAnDJ,UAmDI,EAlDJ,mBAAA,CAAsB,GAAtB,EAAsB,IAAtB,EAAsB,gBAAA,CAAhB,MAAA,CAAA,SAAgB,CAAtB,EAAe;AAAA;AAAf,GAkDI,EAjDJ,UAiDI,EAhDJ,UAgDI,EA/CJ,mBAAA,CAAwB,GAAxB,EAAwB,IAAxB,EAAwB,gBAAA,CAAlB,MAAA,CAAA,WAAkB,CAAxB,EAAiB;AAAA;AAAjB,GA+CI,EA7CJ,UA6CI,EA3CR,UA2CQ,EA1CR,mBAAA,CAAA,sDAAA,CA0CQ,EAzCN,mBAAA,CAAgF,OAAhF,EAAgF;AAAzE,IAAA,IAAI,EAAC,MAAoE;AAA7D,IAAA,QAAQ,EAAC,UAAoD;AAAxC,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,MAAA,CAAA,QAAA,CAAS,MAAM,CAAC,MAAP,CAAc,KAAvB,CAAF;AAAA,KAAA;AAAkC,GAAhF,E,IAAA,E;;AAAA,GAyCM,EAvCR,mBAAA,CAAA,WAAA,CAuCQ,EArCJ,UAqCI,EApCF,mBAAA,CAAwC,QAAxC,EAAwC;AAA/B,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,MAAA,CAAA,MAAA,IAAA,MAAA,CAAA,MAAA,OAAA,MAAA,YAAF;AAAA,KAAA;AAA0B,GAAxC,EAAwB,SAAxB,CAoCE,EAnCJ,UAmCI,EAlCF,mBAAA,CAA+D,QAA/D,EAA+D;AAAvD,IAAA,IAAI,EAAC,QAAkD;AAAxC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,MAAA,CAAA,gBAAA,IAAA,MAAA,CAAA,gBAAA,OAAA,MAAA,YAAF;AAAA,KAAA;AAAmC,GAA/D,EAAgD,QAAhD,CAkCE,EAjCJ,WAiCI,EAhCF,mBAAA,CAAiD,QAAjD,EAAiD;AAAxC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,MAAA,CAAA,aAAA,IAAA,MAAA,CAAA,aAAA,OAAA,MAAA,YAAF;AAAA,KAAA;AAAmC,GAAjD,EAA+B,WAA/B,CAgCE,EA/BJ,WA+BI,EA7BN,mBAAA,CAUM,KAVN,EAAA,WAAA,EAUM,CATJ,YAAA,CAOwB,kBAPxB,EAOwB;AANxB,IAAA,GAAG,EAAC,YAMoB;AALxB,IAAA,KAAK,EAAC,SAKkB;AAJvB,IAAA,GAAG,EAAE,MAAA,CAAA,UAIkB;AAHvB,IAAA,QAAQ,EAAE,KAGa;AAFvB,IAAA,QAAM,EAAE,MAAA,CAAA,MAEe;AADvB,qBAAe;wBACK;AADL;AACQ,GAPxB,E,IAAA,E;;AAAA,I,mBAAA,CASI,CAVN,CA6BM,EAlBR,WAkBQ,EAjBR,WAiBQ,EAfN,WAeM,EAdK,MAAA,CAAA,Q,kBAAX,mBAAA,CASM,KATN,EASM,WATN,EASM,CARA,mBAAA,CAA4B,GAA5B,EAA4B,IAA5B,EAA4B,gBAAA,CAAvB,MAAA,CAAA,iBAAuB,CAA5B,EAAsB;AAAA;AAAtB,GAQA,EAPA,mBAAA,CAAA,uBAAA,CAOA,EANA,WAMA,EALA,mBAAA,CAEM,KAFN,EAEM,IAFN,EAEM,CADJ,mBAAA,CAAyC,KAAzC,EAAyC;AAAnC,IAAA,GAAG,EAAE,MAAA,CAAA,QAA8B;AAApB,IAAA,GAAG,EAAC;AAAgB,GAAzC,E,IAAA,E;;AAAA,I,WAAA,CACI,CAFN,CAKA,EADR,WACQ,CATN,C,mBAUA,mBAAA,CAEM,KAFN,EAEM,WAFN,EAEM,WAFN,C,CAIM,CAvDN,C","sourcesContent":["<template>\n  <div>\n  <br>\n\n  <br>\n    <p>uploadUrl</p>\n    <p>{{ uploadUrl }}</p>\n    <br>\n    <p>downloadUrl</p>\n    <p>{{ downloadUrl }}</p>\n\n    <br>\n\n<br>\n<!-- <form action=\"\" encrypt=\"multipart/form-data\"> -->\n  <input type=\"file\" multiple=\"multiple\" @change=\"setImage($event.target.files)\"/>\n\n<!-- </form> -->\n\n    <br>\n      <button @click=\"getUrl\">get Url</button>\n    <br>\n      <button type=\"submit\" @click=\"simpleCanvasTest\">upload</button>\n    <br>\n      <button @click=\"handleGetFile\">get image</button>\n    <br>\n\n  <div class=\"w-48 h-48\">\n    <cropper\n    ref=\"cropperRef\"\n    class=\"cropper\"\n    :src=\"imgBlobUrl\"\n    :autoZoom=\"false\"\n    @change=\"change\"\n    :stencil-props=\"{\n      aspectRatio: 16/9 }\"/>\n\n  </div>\n<br>\n<p>******************</p>\n\n  <br>\n  <div v-if=\"imageLoc\">\n        <p>{{imageLocSubstring}}</p>\n        <!-- <p>{{imageLoc}}</p> -->\n        <br>\n        <div>\n          <img :src=\"imageLoc\" alt=\"imageGoesHere\">\n        </div>\n\n<br>\n  </div>\n  <div v-else>\n  <p>no image</p>\n  </div>\n\n  </div>\n\n</template>\n\n<script>\nimport axios from 'axios'\nimport { ref, computed } from 'vue'\nimport { Cropper } from 'vue-advanced-cropper'\nimport 'vue-advanced-cropper/dist/style.css';\nimport FormData2 from 'form-data'\n\n  export default {\n    setup() {\n    let imageZ = ref(null)\n    let imageText = ref('hh')\n    let imageUpload = null\n    let imageLoc = ref(null)\n    const img = new Image()\n    let imageForUpload = ref(null)\n    const cropperRef = ref(null)\n    let imageStream = ref(null)\n    let imgBlobUrl = ref(null)\n    let testVar = ref('http://localhost:8080/80bcafeb-612b-4833-9fc9-fe974a3f6199')\n    let getImgBlobUrl = ref(null)\n    let im = ref(null)\n    let uploadUrl = ref(null)\n    let imageFile = ref(null)\n    let imageUrl = ref('')\n    let files2 = []\n    let imageName = ref(null)\n    let downloadUrl = ref(null)\n    let imageLocSubstring = ref(null)\n\n    const change = (e) => {\n      // debugger\n      console.log(e)\n      // alert(e)\n    }\n      const setImage = (files) => {\n        imageFile = files[0]\n\n          // imageLoc.value = \"blob:http://localhost:8080/ffdf684c-9b08-490a-bdee-3c8e1f0e2456\"\n\n      testVar.value = \"bb\"\n          imgBlobUrl.value = URL.createObjectURL(files[0])\n          // debugger\n          imageForUpload.value = files[0]\n          console.log('imageForUpload before')\n          console.log(imageForUpload)\n          // debugger\n\n        }\n\n        const getUrl = () => {\n          // debugger\n        axios({\n          method: 'get',\n          url:'http://localhost:4001/s3UploadUrl'\n        }).then(response => {\n          // debugger\n          console.log(response)\n          uploadUrl.value = response.data.uploadUrl\n          imageName.value = response.data.imageName\n          console.log(uploadUrl)\n      })}\n\n      const simpleCanvasTest = () => {\n        const { canvas, coordinates, visibleArea } = cropperRef.value.getResult()\n        debugger\n\n    // const formData = new FormData();\n\n      canvas.toBlob(blob => {\n        debugger\n          axios({\n            method: 'put',\n            url: uploadUrl.value,\n            data: blob\n          })\n          .then(response => {\n            debugger\n            console.log('response')\n            console.log(response)\n          })\n          .catch (err => {\n          console.log(err)\n      })})}\n\n    const handleGetFile = async () => {\n      debugger\n        axios({\n          method: 'get',\n          url:'http://localhost:4001/s3DownloadUrl',\n          headers: {\n            'image-name': imageName.value\n          }\n        }).then(response => {\n          debugger\n          console.log(response)\n          downloadUrl.value = response.data\n          // imageName.value = response.data.imageName\n          // console.log(downloadUrl, imageName)\n\n        axios({\n          method: 'get',\n          url: downloadUrl.value,\n          responseType: 'blob'\n        })\n        .then(response => {\n          debugger\n          // console.log('response.data')\n          // console.log(response.data)\n          // let fileReader = new FileReader()\n          // imageLoc.value = response.data\n          // let blob = new Blob([response.data])\n          imageLoc.value = ( URL || webkitURL).createObjectURL(response.data)\n\n          debugger\n          // fileReader.onload = function (event) {\n          //   debugger\n          //   imageLoc.value = event.target.result\n          //   imageLocSubstring.value = event.target.result.substring(1,10)\n          //   console.log(imageLoc.value)\n          // }\n          // fileReader(blob)\n\n          // fileReader.readAsDataURL(blob)\n          // imageLoc.value = imageLoc.value.substring(imageLoc.value.length - (imageLoc.value.length - 5))\n          // debugger\n\n        })\n        .catch(err => {\n          console.log(err)\n        })})}\n\n\n      return {\n        change,\n        setImage,\n        imageZ,\n        imageText,\n        imageLoc,\n        // handleUploadFiles,\n        handleGetFile,\n        cropperRef,\n        imageStream,\n        imgBlobUrl,\n        testVar,\n        getImgBlobUrl,\n        imageForUpload,\n        im,\n        simpleCanvasTest,\n        getUrl,\n        imageFile,\n        uploadUrl,\n        downloadUrl,\n        imageName,\n        imageLocSubstring\n      }\n  },\n    components: {\n      Cropper\n    },\n      props: ['fieldName'],\n      data() {\n        return {\n          // imageLoc: null,\n          // imageX: null,\n          // imageStream: null,\n          // img: 'https://images.pexels.com/photos/226746/pexels-photo-226746.jpeg',\n          // src: null\n        }\n      },\n      methods: {\n      //   imageuploaded(res) {\n      //     debugger\n      //     console.log(res)\n      // if (res.errcode == 0) {\n      //   this.src = 'http://localhost:4001/images/:2021-05-01T18:09:21.449Zcooking-dishes-herb-kitchen-1109197.jpg';\n      // }},\n\n    },\n    computed: {\n      // imgStream() {\n      //   return this.imageStream\n      // }\n    }\n\n      }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>\n\n\n//        const handleUploadFiles = (e) => {\n//         debugger\n//         // const fr = new FileReader()\n//         // var buffer = new ArrayBuffer(100);\n//         // var view = new DataView(buffer);\n//         // console.log(buffer)\n//         // console.log(view)\n//         console.log('imageForUpload after')\n//         console.log(imageForUpload)\n//         debugger\n//         // const im = fr.readAsArrayBuffer(imageForUpload.value)\n\n//         debugger\n//         // console.log(im)\n\n//         console.log('e')\n//         console.log(e)\n//         console.log('cropperRef', cropperRef)\n//         console.log('cropperRef.value', cropperRef.value)\n//         const { canvas, coordinates, visibleArea } = cropperRef.value.getResult()\n\n//         // im = canvas.toDataURL();\n//         // debugger\n//         // alert(im)\n//         // console.log(im)\n\n//         console.log('canvas')\n//         console.log(canvas.namespaceURI)\n//         console.log(canvas.src)\n//         console.log(coordinates)\n//         console.dir(visibleArea)\n//         debugger\n//         const ctx = canvas.getContext('2d');\n//         console.log(ctx)\n// ctx.fillStyle = 'green';\n// ctx.fillRect(10, 10, 100, 100);\n// debugger\n//         const formData = new FormData()\n//         console.log(canvas)\n//         canvas.toBlob(blob => {\n//           formData.append('kitchenImage', canvas)\n//           formData.append('userId', '88jkjklje726')\n//           axios({\n//             method: 'post',\n//             url: 'http://localhost:4001/kitchens',\n//             data: formData\n//           })\n//           .then(response => {\n//             debugger\n//             // let reader = new FileReader()\n\n//             // reader.onload = () => {\n//             //   imageUpload = reader.result\n//             // }\n//             // reader.readAsDataURL(response.data)\n//             console.log('imageLoc',  response.data.imagePath.toString())\n//             imageLoc = response.data.imagePath\n\n//             })\n//           .catch (err => {\n//           console.log(err)\n//         })\n//     })}\n"],"sourceRoot":""}]}