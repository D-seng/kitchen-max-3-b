{"remainingRequest":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/babel-loader/lib/index.js!/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/darrensenger/workspace/current/kitchen-max-3-b/client/src/components/S3FileUpload.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/src/components/S3FileUpload.vue","mtime":1638506900824},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/cache-loader/dist/cjs.js","mtime":1638459943317},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/babel-loader/lib/index.js","mtime":1638459947335},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/cache-loader/dist/cjs.js","mtime":1638459943317},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/vue-loader-v16/dist/index.js","mtime":1638459949352}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/darrensenger/workspace/current/kitchen-max-3-b/client/src/components/S3FileUpload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n  <br>\n\n  <br>\n    <p>uploadUrl</p>\n    <p>{{ uploadUrl }}</p>\n    <br>\n    <p>downloadUrl</p>\n    <p>{{ downloadUrl }}</p>\n\n    <br>\n\n<br>\n<!-- <form action=\"\" encrypt=\"multipart/form-data\"> -->\n  <input type=\"file\" multiple=\"multiple\" @change=\"setImage($event.target.files)\"/>\n\n<!-- </form> -->\n\n    <br>\n      <button @click=\"getUrl\">get Url</button>\n    <br>\n      <button type=\"submit\" @click=\"simpleCanvasTest\">upload</button>\n    <br>\n      <button @click=\"handleGetFile\">get image</button>\n    <br>\n\n  <div class=\"w-48 h-48\">\n    <cropper\n    ref=\"cropperRef\"\n    class=\"cropper\"\n    :src=\"imgBlobUrl\"\n    :autoZoom=\"false\"\n    @change=\"change\"\n    :stencil-props=\"{\n      aspectRatio: 16/9 }\"/>\n\n  </div>\n<br>\n<p>******************</p>\n\n  <br>\n  <div v-if=\"imageLoc\">\n        <p>{{imageLocSubstring}}</p>\n        <!-- <p>{{imageLoc}}</p> -->\n        <br>\n        <div>\n          <img :src=\"imageLoc\" alt=\"imageGoesHere\">\n        </div>\n\n<br>\n  </div>\n  <div v-else>\n  <p>no image</p>\n  </div>\n\n  </div>\n\n</template>\n\n<script>\nimport axios from 'axios'\nimport { ref, computed } from 'vue'\nimport { Cropper } from 'vue-advanced-cropper'\nimport 'vue-advanced-cropper/dist/style.css';\nimport FormData2 from 'form-data'\n\n  export default {\n    setup() {\n    let imageZ = ref(null)\n    let imageText = ref('hh')\n    let imageUpload = null\n    let imageLoc = ref(null)\n    const img = new Image()\n    let imageForUpload = ref(null)\n    const cropperRef = ref(null)\n    let imageStream = ref(null)\n    let imgBlobUrl = ref(null)\n    let testVar = ref('http://localhost:8080/80bcafeb-612b-4833-9fc9-fe974a3f6199')\n    let getImgBlobUrl = ref(null)\n    let im = ref(null)\n    let uploadUrl = ref(null)\n    let imageFile = ref(null)\n    let imageUrl = ref('')\n    let files2 = []\n    let imageName = ref(null)\n    let downloadUrl = ref(null)\n    let imageLocSubstring = ref(null)\n\n    const change = (e) => {\n      // debugger\n      console.log(e)\n      // alert(e)\n    }\n      const setImage = (files) => {\n        imageFile = files[0]\n\n          // imageLoc.value = \"blob:http://localhost:8080/ffdf684c-9b08-490a-bdee-3c8e1f0e2456\"\n\n      testVar.value = \"bb\"\n          imgBlobUrl.value = URL.createObjectURL(files[0])\n          // debugger\n          imageForUpload.value = files[0]\n          console.log('imageForUpload before')\n          console.log(imageForUpload)\n          // debugger\n\n        }\n\n        const getUrl = () => {\n          // debugger\n        axios({\n          method: 'get',\n          url:'http://localhost:4001/s3UploadUrl'\n        }).then(response => {\n          // debugger\n          console.log(response)\n          uploadUrl.value = response.data.uploadUrl\n          imageName.value = response.data.imageName\n          console.log(uploadUrl)\n      })}\n\n      const simpleCanvasTest = () => {\n        const { canvas, coordinates, visibleArea } = cropperRef.value.getResult()\n        debugger\n\n    // const formData = new FormData();\n\n      canvas.toBlob(blob => {\n        debugger\n          axios({\n            method: 'put',\n            url: uploadUrl.value,\n            data: blob\n          })\n          .then(response => {\n            debugger\n            console.log('response')\n            console.log(response)\n          })\n          .catch (err => {\n          console.log(err)\n      })})}\n\n    const handleGetFile = async () => {\n      debugger\n        axios({\n          method: 'get',\n          url:'http://localhost:4001/s3DownloadUrl',\n          headers: {\n            'image-name': imageName.value\n          }\n        }).then(response => {\n          debugger\n          console.log(response)\n          downloadUrl.value = response.data\n          // imageName.value = response.data.imageName\n          // console.log(downloadUrl, imageName)\n\n        axios({\n          method: 'get',\n          url: downloadUrl.value,\n          responseType: 'blob'\n        })\n        .then(response => {\n          debugger\n          // console.log('response.data')\n          // console.log(response.data)\n          // let fileReader = new FileReader()\n          // imageLoc.value = response.data\n          // let blob = new Blob([response.data])\n          imageLoc.value = ( URL || webkitURL).createObjectURL(response.data)\n\n          debugger\n          // fileReader.onload = function (event) {\n          //   debugger\n          //   imageLoc.value = event.target.result\n          //   imageLocSubstring.value = event.target.result.substring(1,10)\n          //   console.log(imageLoc.value)\n          // }\n          // fileReader(blob)\n\n          // fileReader.readAsDataURL(blob)\n          // imageLoc.value = imageLoc.value.substring(imageLoc.value.length - (imageLoc.value.length - 5))\n          // debugger\n\n        })\n        .catch(err => {\n          console.log(err)\n        })})}\n\n\n      return {\n        change,\n        setImage,\n        imageZ,\n        imageText,\n        imageLoc,\n        // handleUploadFiles,\n        handleGetFile,\n        cropperRef,\n        imageStream,\n        imgBlobUrl,\n        testVar,\n        getImgBlobUrl,\n        imageForUpload,\n        im,\n        simpleCanvasTest,\n        getUrl,\n        imageFile,\n        uploadUrl,\n        downloadUrl,\n        imageName,\n        imageLocSubstring\n      }\n  },\n    components: {\n      Cropper\n    },\n      props: ['fieldName'],\n      data() {\n        return {\n          // imageLoc: null,\n          // imageX: null,\n          // imageStream: null,\n          // img: 'https://images.pexels.com/photos/226746/pexels-photo-226746.jpeg',\n          // src: null\n        }\n      },\n      methods: {\n      //   imageuploaded(res) {\n      //     debugger\n      //     console.log(res)\n      // if (res.errcode == 0) {\n      //   this.src = 'http://localhost:4001/images/:2021-05-01T18:09:21.449Zcooking-dishes-herb-kitchen-1109197.jpg';\n      // }},\n\n    },\n    computed: {\n      // imgStream() {\n      //   return this.imageStream\n      // }\n    }\n\n      }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>\n\n\n//        const handleUploadFiles = (e) => {\n//         debugger\n//         // const fr = new FileReader()\n//         // var buffer = new ArrayBuffer(100);\n//         // var view = new DataView(buffer);\n//         // console.log(buffer)\n//         // console.log(view)\n//         console.log('imageForUpload after')\n//         console.log(imageForUpload)\n//         debugger\n//         // const im = fr.readAsArrayBuffer(imageForUpload.value)\n\n//         debugger\n//         // console.log(im)\n\n//         console.log('e')\n//         console.log(e)\n//         console.log('cropperRef', cropperRef)\n//         console.log('cropperRef.value', cropperRef.value)\n//         const { canvas, coordinates, visibleArea } = cropperRef.value.getResult()\n\n//         // im = canvas.toDataURL();\n//         // debugger\n//         // alert(im)\n//         // console.log(im)\n\n//         console.log('canvas')\n//         console.log(canvas.namespaceURI)\n//         console.log(canvas.src)\n//         console.log(coordinates)\n//         console.dir(visibleArea)\n//         debugger\n//         const ctx = canvas.getContext('2d');\n//         console.log(ctx)\n// ctx.fillStyle = 'green';\n// ctx.fillRect(10, 10, 100, 100);\n// debugger\n//         const formData = new FormData()\n//         console.log(canvas)\n//         canvas.toBlob(blob => {\n//           formData.append('kitchenImage', canvas)\n//           formData.append('userId', '88jkjklje726')\n//           axios({\n//             method: 'post',\n//             url: 'http://localhost:4001/kitchens',\n//             data: formData\n//           })\n//           .then(response => {\n//             debugger\n//             // let reader = new FileReader()\n\n//             // reader.onload = () => {\n//             //   imageUpload = reader.result\n//             // }\n//             // reader.readAsDataURL(response.data)\n//             console.log('imageLoc',  response.data.imagePath.toString())\n//             imageLoc = response.data.imagePath\n\n//             })\n//           .catch (err => {\n//           console.log(err)\n//         })\n//     })}\n"],"sourceRoot":""}]}