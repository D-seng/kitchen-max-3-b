{"remainingRequest":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/darrensenger/workspace/current/kitchen-max-3-b/client/src/components/S3FileUpload.vue?vue&type=template&id=e25efae6","dependencies":[{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/src/components/S3FileUpload.vue","mtime":1638506900824},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/cache-loader/dist/cjs.js","mtime":1638459943317},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/babel-loader/lib/index.js","mtime":1638459947335},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1638459950764},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/cache-loader/dist/cjs.js","mtime":1638459943317},{"path":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/node_modules/vue-loader-v16/dist/index.js","mtime":1638459949352}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdj4KICA8YnI+CgogIDxicj4KICAgIDxwPnVwbG9hZFVybDwvcD4KICAgIDxwPnt7IHVwbG9hZFVybCB9fTwvcD4KICAgIDxicj4KICAgIDxwPmRvd25sb2FkVXJsPC9wPgogICAgPHA+e3sgZG93bmxvYWRVcmwgfX08L3A+CgogICAgPGJyPgoKPGJyPgo8IS0tIDxmb3JtIGFjdGlvbj0iIiBlbmNyeXB0PSJtdWx0aXBhcnQvZm9ybS1kYXRhIj4gLS0+CiAgPGlucHV0IHR5cGU9ImZpbGUiIG11bHRpcGxlPSJtdWx0aXBsZSIgQGNoYW5nZT0ic2V0SW1hZ2UoJGV2ZW50LnRhcmdldC5maWxlcykiLz4KCjwhLS0gPC9mb3JtPiAtLT4KCiAgICA8YnI+CiAgICAgIDxidXR0b24gQGNsaWNrPSJnZXRVcmwiPmdldCBVcmw8L2J1dHRvbj4KICAgIDxicj4KICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIEBjbGljaz0ic2ltcGxlQ2FudmFzVGVzdCI+dXBsb2FkPC9idXR0b24+CiAgICA8YnI+CiAgICAgIDxidXR0b24gQGNsaWNrPSJoYW5kbGVHZXRGaWxlIj5nZXQgaW1hZ2U8L2J1dHRvbj4KICAgIDxicj4KCiAgPGRpdiBjbGFzcz0idy00OCBoLTQ4Ij4KICAgIDxjcm9wcGVyCiAgICByZWY9ImNyb3BwZXJSZWYiCiAgICBjbGFzcz0iY3JvcHBlciIKICAgIDpzcmM9ImltZ0Jsb2JVcmwiCiAgICA6YXV0b1pvb209ImZhbHNlIgogICAgQGNoYW5nZT0iY2hhbmdlIgogICAgOnN0ZW5jaWwtcHJvcHM9InsKICAgICAgYXNwZWN0UmF0aW86IDE2LzkgfSIvPgoKICA8L2Rpdj4KPGJyPgo8cD4qKioqKioqKioqKioqKioqKio8L3A+CgogIDxicj4KICA8ZGl2IHYtaWY9ImltYWdlTG9jIj4KICAgICAgICA8cD57e2ltYWdlTG9jU3Vic3RyaW5nfX08L3A+CiAgICAgICAgPCEtLSA8cD57e2ltYWdlTG9jfX08L3A+IC0tPgogICAgICAgIDxicj4KICAgICAgICA8ZGl2PgogICAgICAgICAgPGltZyA6c3JjPSJpbWFnZUxvYyIgYWx0PSJpbWFnZUdvZXNIZXJlIj4KICAgICAgICA8L2Rpdj4KCjxicj4KICA8L2Rpdj4KICA8ZGl2IHYtZWxzZT4KICA8cD5ubyBpbWFnZTwvcD4KICA8L2Rpdj4KCiAgPC9kaXY+Cgo="},{"version":3,"sources":["/Users/darrensenger/workspace/current/kitchen-max-3-b/client/src/components/S3FileUpload.vue"],"names":[],"mappings":"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","file":"/Users/darrensenger/workspace/current/kitchen-max-3-b/client/src/components/S3FileUpload.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n  <br>\n\n  <br>\n    <p>uploadUrl</p>\n    <p>{{ uploadUrl }}</p>\n    <br>\n    <p>downloadUrl</p>\n    <p>{{ downloadUrl }}</p>\n\n    <br>\n\n<br>\n<!-- <form action=\"\" encrypt=\"multipart/form-data\"> -->\n  <input type=\"file\" multiple=\"multiple\" @change=\"setImage($event.target.files)\"/>\n\n<!-- </form> -->\n\n    <br>\n      <button @click=\"getUrl\">get Url</button>\n    <br>\n      <button type=\"submit\" @click=\"simpleCanvasTest\">upload</button>\n    <br>\n      <button @click=\"handleGetFile\">get image</button>\n    <br>\n\n  <div class=\"w-48 h-48\">\n    <cropper\n    ref=\"cropperRef\"\n    class=\"cropper\"\n    :src=\"imgBlobUrl\"\n    :autoZoom=\"false\"\n    @change=\"change\"\n    :stencil-props=\"{\n      aspectRatio: 16/9 }\"/>\n\n  </div>\n<br>\n<p>******************</p>\n\n  <br>\n  <div v-if=\"imageLoc\">\n        <p>{{imageLocSubstring}}</p>\n        <!-- <p>{{imageLoc}}</p> -->\n        <br>\n        <div>\n          <img :src=\"imageLoc\" alt=\"imageGoesHere\">\n        </div>\n\n<br>\n  </div>\n  <div v-else>\n  <p>no image</p>\n  </div>\n\n  </div>\n\n</template>\n\n<script>\nimport axios from 'axios'\nimport { ref, computed } from 'vue'\nimport { Cropper } from 'vue-advanced-cropper'\nimport 'vue-advanced-cropper/dist/style.css';\nimport FormData2 from 'form-data'\n\n  export default {\n    setup() {\n    let imageZ = ref(null)\n    let imageText = ref('hh')\n    let imageUpload = null\n    let imageLoc = ref(null)\n    const img = new Image()\n    let imageForUpload = ref(null)\n    const cropperRef = ref(null)\n    let imageStream = ref(null)\n    let imgBlobUrl = ref(null)\n    let testVar = ref('http://localhost:8080/80bcafeb-612b-4833-9fc9-fe974a3f6199')\n    let getImgBlobUrl = ref(null)\n    let im = ref(null)\n    let uploadUrl = ref(null)\n    let imageFile = ref(null)\n    let imageUrl = ref('')\n    let files2 = []\n    let imageName = ref(null)\n    let downloadUrl = ref(null)\n    let imageLocSubstring = ref(null)\n\n    const change = (e) => {\n      // debugger\n      console.log(e)\n      // alert(e)\n    }\n      const setImage = (files) => {\n        imageFile = files[0]\n\n          // imageLoc.value = \"blob:http://localhost:8080/ffdf684c-9b08-490a-bdee-3c8e1f0e2456\"\n\n      testVar.value = \"bb\"\n          imgBlobUrl.value = URL.createObjectURL(files[0])\n          // debugger\n          imageForUpload.value = files[0]\n          console.log('imageForUpload before')\n          console.log(imageForUpload)\n          // debugger\n\n        }\n\n        const getUrl = () => {\n          // debugger\n        axios({\n          method: 'get',\n          url:'http://localhost:4001/s3UploadUrl'\n        }).then(response => {\n          // debugger\n          console.log(response)\n          uploadUrl.value = response.data.uploadUrl\n          imageName.value = response.data.imageName\n          console.log(uploadUrl)\n      })}\n\n      const simpleCanvasTest = () => {\n        const { canvas, coordinates, visibleArea } = cropperRef.value.getResult()\n        debugger\n\n    // const formData = new FormData();\n\n      canvas.toBlob(blob => {\n        debugger\n          axios({\n            method: 'put',\n            url: uploadUrl.value,\n            data: blob\n          })\n          .then(response => {\n            debugger\n            console.log('response')\n            console.log(response)\n          })\n          .catch (err => {\n          console.log(err)\n      })})}\n\n    const handleGetFile = async () => {\n      debugger\n        axios({\n          method: 'get',\n          url:'http://localhost:4001/s3DownloadUrl',\n          headers: {\n            'image-name': imageName.value\n          }\n        }).then(response => {\n          debugger\n          console.log(response)\n          downloadUrl.value = response.data\n          // imageName.value = response.data.imageName\n          // console.log(downloadUrl, imageName)\n\n        axios({\n          method: 'get',\n          url: downloadUrl.value,\n          responseType: 'blob'\n        })\n        .then(response => {\n          debugger\n          // console.log('response.data')\n          // console.log(response.data)\n          // let fileReader = new FileReader()\n          // imageLoc.value = response.data\n          // let blob = new Blob([response.data])\n          imageLoc.value = ( URL || webkitURL).createObjectURL(response.data)\n\n          debugger\n          // fileReader.onload = function (event) {\n          //   debugger\n          //   imageLoc.value = event.target.result\n          //   imageLocSubstring.value = event.target.result.substring(1,10)\n          //   console.log(imageLoc.value)\n          // }\n          // fileReader(blob)\n\n          // fileReader.readAsDataURL(blob)\n          // imageLoc.value = imageLoc.value.substring(imageLoc.value.length - (imageLoc.value.length - 5))\n          // debugger\n\n        })\n        .catch(err => {\n          console.log(err)\n        })})}\n\n\n      return {\n        change,\n        setImage,\n        imageZ,\n        imageText,\n        imageLoc,\n        // handleUploadFiles,\n        handleGetFile,\n        cropperRef,\n        imageStream,\n        imgBlobUrl,\n        testVar,\n        getImgBlobUrl,\n        imageForUpload,\n        im,\n        simpleCanvasTest,\n        getUrl,\n        imageFile,\n        uploadUrl,\n        downloadUrl,\n        imageName,\n        imageLocSubstring\n      }\n  },\n    components: {\n      Cropper\n    },\n      props: ['fieldName'],\n      data() {\n        return {\n          // imageLoc: null,\n          // imageX: null,\n          // imageStream: null,\n          // img: 'https://images.pexels.com/photos/226746/pexels-photo-226746.jpeg',\n          // src: null\n        }\n      },\n      methods: {\n      //   imageuploaded(res) {\n      //     debugger\n      //     console.log(res)\n      // if (res.errcode == 0) {\n      //   this.src = 'http://localhost:4001/images/:2021-05-01T18:09:21.449Zcooking-dishes-herb-kitchen-1109197.jpg';\n      // }},\n\n    },\n    computed: {\n      // imgStream() {\n      //   return this.imageStream\n      // }\n    }\n\n      }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>\n\n\n//        const handleUploadFiles = (e) => {\n//         debugger\n//         // const fr = new FileReader()\n//         // var buffer = new ArrayBuffer(100);\n//         // var view = new DataView(buffer);\n//         // console.log(buffer)\n//         // console.log(view)\n//         console.log('imageForUpload after')\n//         console.log(imageForUpload)\n//         debugger\n//         // const im = fr.readAsArrayBuffer(imageForUpload.value)\n\n//         debugger\n//         // console.log(im)\n\n//         console.log('e')\n//         console.log(e)\n//         console.log('cropperRef', cropperRef)\n//         console.log('cropperRef.value', cropperRef.value)\n//         const { canvas, coordinates, visibleArea } = cropperRef.value.getResult()\n\n//         // im = canvas.toDataURL();\n//         // debugger\n//         // alert(im)\n//         // console.log(im)\n\n//         console.log('canvas')\n//         console.log(canvas.namespaceURI)\n//         console.log(canvas.src)\n//         console.log(coordinates)\n//         console.dir(visibleArea)\n//         debugger\n//         const ctx = canvas.getContext('2d');\n//         console.log(ctx)\n// ctx.fillStyle = 'green';\n// ctx.fillRect(10, 10, 100, 100);\n// debugger\n//         const formData = new FormData()\n//         console.log(canvas)\n//         canvas.toBlob(blob => {\n//           formData.append('kitchenImage', canvas)\n//           formData.append('userId', '88jkjklje726')\n//           axios({\n//             method: 'post',\n//             url: 'http://localhost:4001/kitchens',\n//             data: formData\n//           })\n//           .then(response => {\n//             debugger\n//             // let reader = new FileReader()\n\n//             // reader.onload = () => {\n//             //   imageUpload = reader.result\n//             // }\n//             // reader.readAsDataURL(response.data)\n//             console.log('imageLoc',  response.data.imagePath.toString())\n//             imageLoc = response.data.imagePath\n\n//             })\n//           .catch (err => {\n//           console.log(err)\n//         })\n//     })}\n"]}]}